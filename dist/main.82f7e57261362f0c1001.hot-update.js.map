{"version":3,"sources":["webpack://react-test-app/./react/containers/ChatBox/ChatBoxContainer.js","webpack://react-test-app/./react/store/slices/chatbox/actions.js","webpack://react-test-app/webpack/runtime/getFullHash"],"names":["getConnectionState","actions","ChatBoxContainer","dispatch","useDispatch","message","setMessage","React","socketOpenConnection","sendMessage","socketSend","handleEdit","connectToWebsocket","socketListener","socketSendData"],"mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA,MAAM;AAAEA;AAAF,IAAyBC,kEAA/B;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAC7B,QAAMC,QAAQ,GAAGC,wDAAW,EAA5B;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBC,2CAAA,EAA9B;AACAA,8CAAA,CAAgB,MAAK;AACnBJ,YAAQ,CAACK,mFAAoB,EAArB,CAAR;AACAL,YAAQ,CAACH,kBAAkB,CAAC,IAAD,CAAnB,CAAR;AAEA,WAAO,MAAM;AACXG,cAAQ,CAACH,kBAAkB,CAAC,KAAD,CAAnB,CAAR;AACD,KAFD;AAGD,GAPD,EAOE,EAPF;;AASA,QAAMS,WAAW,GAAG,MAAM;AACxBN,YAAQ,CAACO,yEAAU,CAACL,OAAD,CAAX,CAAR;AACD,GAFD;;AAIA,QAAMM,UAAU,GAAIN,OAAD,IAAa;AAC9BC,cAAU,CAACD,OAAD,CAAV;AACD,GAFD;;AAID,sBACG,iDAAC,wDAAD;AACC,cAAU,EAAEI,WADb;AAEC,cAAU,EAAEE;AAFb,IADH;AAMA,CA1BD;;AA4BA,+DAAeT,gBAAf,E;;;;;;;;;;;;;;;;;;ACnCA;AACA;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACO,MAAMM,oBAAoB,GAAG,MAAM,MAAOL,QAAP,IAAoB;AAC5DA,UAAQ,CAACS,kEAAkB,EAAnB,CAAR;AACAT,UAAQ,CAACU,8DAAc,EAAf,CAAR;AACD,CAHM;AAKA,MAAMH,UAAU,GAAIL,OAAD,IAAa,MAAOF,QAAP,IAAoB;AACzDA,UAAQ,CAACW,8DAAc,CAACT,OAAD,CAAf,CAAR;AACD,CAFM,C;;;;;;;;;;UChBP,oCAAoC,+BAA+B,E","file":"main.82f7e57261362f0c1001.hot-update.js","sourcesContent":["import React from 'react'\r\nimport ChatBox from \"../../components/ChatBox\";\r\nimport { useDispatch } from 'react-redux'\r\nimport {socketOpenConnection, socketSend} from \"../../store/slices/chatbox/actions\";\r\nimport { selectors, actions} from \"../../store/slices/chatbox/reducer\";\r\n\r\nconst { getConnectionState } = actions;\r\nconst ChatBoxContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = React.useState();\r\n  React.useEffect(()=> {\r\n    dispatch(socketOpenConnection());\r\n    dispatch(getConnectionState(true));\r\n\r\n    return () => {\r\n      dispatch(getConnectionState(false))\r\n    }\r\n  },[]);\r\n\r\n  const sendMessage = () => {\r\n    dispatch(socketSend(message))\r\n  };\r\n\r\n  const handleEdit = (message) => {\r\n    setMessage(message)\r\n  };\r\n\r\n return (\r\n    <ChatBox\r\n     handleSend={sendMessage}\r\n     handleEdit={handleEdit}\r\n    />\r\n  )\r\n};\r\n\r\nexport default ChatBoxContainer;\r\n\r\n","import { actions } from './reducer'\r\nimport {connectToWebsocket, socketListener, socketSendData} from \"../../../api/websocket\";\r\n\r\n/**\r\n * Thunk middleware functions\r\n */\r\n\r\n/**\r\n *Get data from Websocket\r\n * @returns {Function}\r\n */\r\nexport const socketOpenConnection = () => async (dispatch) => {\r\n  dispatch(connectToWebsocket());\r\n  dispatch(socketListener())\r\n};\r\n\r\nexport const socketSend = (message) => async (dispatch) => {\r\n  dispatch(socketSendData(message));\r\n};\r\n","__webpack_require__.h = function() { return \"d448b71b97720e07ee60\"; }"],"sourceRoot":""}